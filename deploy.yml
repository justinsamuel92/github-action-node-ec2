name: deploy

on:
  push:
    branches:
      - main
jobs:
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [lts/*]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v3.0.0
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2.1.7
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn
        
      - name: Build project 👨🏻‍💻
        run: yarn build
      
      - name: Create Key 👨🏻‍💻
        env:
            PRIVATE_KEY: ${{ secrets.EC2  }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem && chmod 600 private_key.pem

      - name: Clear Current Build 👨🏻‍💻
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.AWS_ACC_NAME  }} '
            cd ~/project-folder
            rm -rf build
            mv build build-pre
          '

      - name: Deploy to EC2 👨🏻‍💻
        run: |
          scp -o StrictHostKeyChecking=no -r -i private_key.pem build/ ${{ secrets.AWS_ACC_NAME  }}:~/project-folder
        
      - name: Restart pm2 👨🏻‍💻
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem  ${{ secrets.AWS_ACC_NAME  }} '
            cd ~/project-folder &&
            pm2 start "yarn start" --name project-folder &&
            pm2 save
          '
